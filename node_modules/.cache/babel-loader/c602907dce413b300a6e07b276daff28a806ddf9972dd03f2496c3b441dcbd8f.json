{"ast":null,"code":"var _jsxFileName = \"/Users/dashashamraeva/user_management_app/management-client/src/routes/MainRouter.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AuthorizedRoutes from \"../routes/AuthorizedRoutes\";\nimport UnauthorizedRoutes from \"../routes/UnauthorizedRoutes\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainRouter = () => {\n  _s();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(AuthorizedRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(UnauthorizedRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(MainRouter, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n_c = MainRouter;\nexport default MainRouter;\nvar _c;\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"names":["React","BrowserRouter","AuthorizedRoutes","UnauthorizedRoutes","useSelector","jsxDEV","_jsxDEV","MainRouter","_s","isLoggedIn","state","auth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dashashamraeva/user_management_app/management-client/src/routes/MainRouter.tsx"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AuthorizedRoutes from \"../routes/AuthorizedRoutes\";\nimport UnauthorizedRoutes from \"../routes/UnauthorizedRoutes\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\nconst MainRouter: React.FC = () => {\n  const isLoggedIn = useSelector((state: RootState) => state.auth.isLoggedIn);\n\n  return (\n    <BrowserRouter>\n      {isLoggedIn ? <AuthorizedRoutes /> : <UnauthorizedRoutes />}\n    </BrowserRouter>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,kBAAkB,MAAM,8BAA8B;AAC7D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAE3E,oBACEH,OAAA,CAACL,aAAa;IAAAW,QAAA,EACXH,UAAU,gBAAGH,OAAA,CAACJ,gBAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGV,OAAA,CAACH,kBAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEpB,CAAC;AAACR,EAAA,CARID,UAAoB;EAAA,QACLH,WAAW;AAAA;AAAAa,EAAA,GAD1BV,UAAoB;AAU1B,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}