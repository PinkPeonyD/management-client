{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  error: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.isLoggedIn = true;\n      state.user = {\n        id: action.payload.id,\n        email: action.payload.email,\n        token: action.payload.token,\n        status: \"active\"\n      };\n      state.error = null;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n      state.user = null;\n      state.error = null;\n    },\n    setError(state, action) {\n      state.error = action.payload;\n    },\n    updateUserStatus(state, action) {\n      if (state.user) {\n        state.user.status = action.payload.status;\n      }\n    }\n  }\n});\nexport const {\n  login,\n  logout,\n  setError,\n  updateUserStatus\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","user","error","authSlice","name","reducers","login","state","action","id","payload","email","token","status","logout","setError","updateUserStatus","actions","reducer"],"sources":["/Users/dashashamraeva/user_management_app/management-client/src/redux/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\ninterface User {\n  id: string;\n  email: string;\n  token: string;\n  status?: string;\n}\ninterface AuthState {\n  isLoggedIn: boolean;\n  user: User | null;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  user: null,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(\n      state,\n      action: PayloadAction<{ id: string; email: string; token: string }>\n    ) {\n      state.isLoggedIn = true;\n      state.user = {\n        id: action.payload.id,\n        email: action.payload.email,\n        token: action.payload.token,\n        status: \"active\",\n      };\n      state.error = null;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n      state.user = null;\n      state.error = null;\n    },\n    setError(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n    },\n    updateUserStatus(state, action: PayloadAction<{ status: string }>) {\n      if (state.user) {\n        state.user.status = action.payload.status;\n      }\n    },\n  },\n});\n\nexport const { login, logout, setError, updateUserStatus } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAa7D,MAAMC,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,KAAKA,CACHC,KAAK,EACLC,MAAmE,EACnE;MACAD,KAAK,CAACP,UAAU,GAAG,IAAI;MACvBO,KAAK,CAACN,IAAI,GAAG;QACXQ,EAAE,EAAED,MAAM,CAACE,OAAO,CAACD,EAAE;QACrBE,KAAK,EAAEH,MAAM,CAACE,OAAO,CAACC,KAAK;QAC3BC,KAAK,EAAEJ,MAAM,CAACE,OAAO,CAACE,KAAK;QAC3BC,MAAM,EAAE;MACV,CAAC;MACDN,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,MAAMA,CAACP,KAAK,EAAE;MACZA,KAAK,CAACP,UAAU,GAAG,KAAK;MACxBO,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDa,QAAQA,CAACR,KAAK,EAAEC,MAA6B,EAAE;MAC7CD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDM,gBAAgBA,CAACT,KAAK,EAAEC,MAAyC,EAAE;MACjE,IAAID,KAAK,CAACN,IAAI,EAAE;QACdM,KAAK,CAACN,IAAI,CAACY,MAAM,GAAGL,MAAM,CAACE,OAAO,CAACG,MAAM;MAC3C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,KAAK;EAAEQ,MAAM;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,GAAGb,SAAS,CAACc,OAAO;AAC9E,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}