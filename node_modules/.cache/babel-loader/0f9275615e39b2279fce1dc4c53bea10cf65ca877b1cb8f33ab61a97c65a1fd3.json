{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../redux/authSlice\";\nconst useAuth = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.auth.user);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Login failed\");\n      }\n      const data = await response.json();\n      dispatch(login({\n        id: data.user.id,\n        email: data.user.email,\n        token: data.token\n      }));\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return {\n    isLoggedIn,\n    user,\n    login: handleLogin,\n    logout: handleLogout\n  };\n};\n_s(useAuth, \"fceYyWYR2fn40JnJIUcTxL10Zvw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\nexport default useAuth;","map":{"version":3,"names":["useDispatch","useSelector","login","logout","useAuth","_s","dispatch","isLoggedIn","state","auth","user","handleLogin","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","data","id","token","console","handleLogout"],"sources":["/Users/dashashamraeva/user_management_app/management-client/src/hooks/useAuth.ts"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nimport { login, logout } from \"../redux/authSlice\";\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.auth.isLoggedIn);\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  const handleLogin = async (email: string, password: string) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Login failed\");\n      }\n\n      const data = await response.json();\n      dispatch(\n        login({\n          id: data.user.id,\n          email: data.user.email,\n          token: data.token,\n        })\n      );\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return { isLoggedIn, user, login: handleLogin, logout: handleLogout };\n};\n\nexport default useAuth;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,KAAK,EAAEC,MAAM,QAAQ,oBAAoB;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,IAAI,GAAGT,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC;EAE/D,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,cAAc,CAAC;MACpD;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCjB,QAAQ,CACNJ,KAAK,CAAC;QACJyB,EAAE,EAAED,IAAI,CAAChB,IAAI,CAACiB,EAAE;QAChBf,KAAK,EAAEc,IAAI,CAAChB,IAAI,CAACE,KAAK;QACtBgB,KAAK,EAAEF,IAAI,CAACE;MACd,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBxB,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,OAAO;IAAEI,UAAU;IAAEG,IAAI;IAAER,KAAK,EAAES,WAAW;IAAER,MAAM,EAAE2B;EAAa,CAAC;AACvE,CAAC;AAACzB,EAAA,CAvCID,OAAO;EAAA,QACMJ,WAAW,EACTC,WAAW,EACjBA,WAAW;AAAA;AAsC1B,eAAeG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}